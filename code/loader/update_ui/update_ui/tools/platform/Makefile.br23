
# --------------Basic Setting-----------------------
#
#配置下载编译方式(/lto)
COMPLIE_MODE=_lto_r3

#配置下载CPU架构(/pi32/pi32v2/q32/q32s)
export CORE=pi32v2

#配置项目文件指向(br20/br21)
export CPU=br23

#配置项目的目标机器型号(generic(开发板)/...)
export BOARD=generic

#配置是否FPGA 验证平台(FPGA/CHIP)
export TYPE=CHIP
#export TYPE=FPGA

#配置下载匹配(br17sdk/br20_sdk/br21_sdk/br22_sdk/br23_sdk)
ifeq ($(TYPE),FPGA)
export NICKNAME=br23_sdk_fpga
else
export NICKNAME=br23_sdk
endif


export NEW_BREDR = n
export RTOS = FREE_RTOS
export SERVER_CORE = lite

export CC_DEFINE += \
-DCONFIG_CPU_BR23 \

export cibuild ?= n
ifeq ($(cibuild),y)
CC_DEFINE += -DCONFIG_RELEASE_ENABLE
endif

# -DCONFIG_PRINT_IN_MASK \

ifeq ($(TYPE),FPGA)
CC_DEFINE += -DCONFIG_FPGA_ENABLE
endif

CC_DEFINE += -DCONFIG_EQ_SUPPORT_ASYNC


# --------------Project path Setting-----------------------
ifeq ($(RTOS),FREE_RTOS)
CC_DEFINE += -DCONFIG_FREE_RTOS_ENABLE
endif

-include apps$(SLASH)app_cfg

export OS_IN_MASKROM = n
export MEM_IN_MASKROM = n
export CVSD_CODEC_IN_MASKROM = n
export LZ4_CODEC_IN_MASKROM = n

export CONFIG_MMU_ENABLE = y

export CONFIG_PSRAM_ENABLE = n


ifeq ($(APP_CASE), earphone)
export MEDIA_NEW_ENABLE = n
else
export MEDIA_NEW_ENABLE = y
endif

export CONFIG_SBC_CODEC_HW = y
export CONFIG_MSBC_CODEC_HW = y
export CONFIG_AAC_CODEC_HW = n

#VER_PI32V2_V1  : BR22
#VER_PI32V2_V2  : BR25 BR30
#VER_PI32V2_EST  : BR23
#VER_PI32V2_DSP  : BR18
#VER_PI32		: BR21
export CONFIG_AEC_VER = VER_PI32V2_EST

#Support Audio Onchip
export CONFIG_AUDIO_ONCHIP = y

ifeq ($(CONFIG_MMU_ENABLE),y)
CC_DEFINE += -DCONFIG_MMU_ENABLE


export CONFIG_MMU_VERSION = v1

endif


ifeq ($(CONFIG_PSRAM_ENABLE),y)
CC_DEFINE += -DCONFIG_PSRAM_ENABLE
endif

ifeq ($(CONFIG_SBC_CODEC_HW),y)
CC_DEFINE += -DCONFIG_SBC_CODEC_HW
endif

ifeq ($(CONFIG_MSBC_CODEC_HW),y)
CC_DEFINE += -DCONFIG_MSBC_CODEC_HW
endif

#AEC config begin------------------------------------
ifeq ($(CONFIG_AEC_VER),VER_PI32)
CC_DEFINE += -DCONFIG_AEC_VER_PI32
endif
ifeq ($(APP_CASE),earphone)
CC_DEFINE += -DCONFIG_AEC_M=128
else
CC_DEFINE += -DCONFIG_AEC_M=640
endif
#AEC config end--------------------------------------

ifeq ($(CONFIG_AUDIO_ONCHIP),y)
CC_DEFINE += -DCONFIG_AUDIO_ONCHIP
endif

ifeq ($(APP_CASE),soundbox)
CC_DEFINE += -DCONFIG_LOCAL_TWS_ENABLE
#///////////////


#aec in_buf和ref_buf复用adc和dac
export CONFIG_AEC_MUX ?= n
export CONFIG_ANS_V2 ?= n
endif

ifeq ($(CONFIG_MMU_ENABLE),y)
CC_DEFINE += -DCONFIG_MMU_ENABLE
endif

ifeq ($(CONFIG_ANS_V2),y)
CC_DEFINE += -DCONFIG_ANS_V2
endif
ifeq ($(CONFIG_AEC_MUX),y)
CC_DEFINE += -DCONFIG_AEC_MUX
endif

ifeq ($(CONFIG_PSRAM_ENABLE),y)
CC_DEFINE += -DCONFIG_PSRAM_ENABLE
endif

ifeq ($(MEDIA_NEW_ENABLE),y)
CC_DEFINE += -DCONFIG_MEDIA_NEW_ENABLE
endif

CC_DEFINE += -D__GCC_PI32V2__

# --------------Project path Setting-----------------------
#
export DIR_OUTPUT = $(ROOT)/cpu/$(CPU)/tools
ifeq ($(HOST_OS), linux)
export POST_BUILD_SCRIPT = $(ROOT)/cpu/$(CPU)/tools/download.sh
endif

ifeq ($(HOST_OS), windows)
export POST_BUILD_SCRIPT = $(ROOT)/cpu/$(CPU)/tools/download.bat
endif

# - output file
export ELF= sdk
OUTPUT_ELF= $(addprefix $(DIR_OUTPUT)$(SLASH), $(ELF))
export OUTPUT_ELF:= $(addsuffix .elf, $(OUTPUT_ELF))

BUILD_LD=sdk.ld
BUILD_MAP=sdk.map

export LINKER = \
-T$(addprefix $(ROOT)/cpu/$(CPU)/, $(BUILD_LD)) \
-M=$(addprefix $(DIR_OUTPUT)$(SLASH), $(BUILD_MAP))


#
# --------------CBP Setting-----------------------
export CBP_TITLE = AC695N_$(APP_CASE)$(PROJECT_SUFFIX)
export CBP_COMPILER = pi32v2_r3_lto_compiler
export CBP_ADD_OPT =

#
# --------------Architecture & Complier Setting-----------------------
#
-include tools$(SLASH)compiler$(SLASH)Makefile.$(CORE)$(COMPLIE_MODE)

pre_make:
	@echo "Making... Soc : br23"
